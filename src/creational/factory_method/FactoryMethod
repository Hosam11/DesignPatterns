## Factory design pattern ##
-> The factory design pattern is used when we have a superclass with multiple sub-classes and based on input,
we need to return one of the sub-class.

-> This pattern takes out the responsibility of the instantiation of a class from the client program to
the factory class.

#Some important points about Factory Design Pattern method are:

-> We can keep Factory class Singleton or we can keep the method that returns the subclass as static.

-> Notice that based on the input parameter, different subclass is created and returned.
getComputer is the factory method.

# Factory Design Pattern Advantages #

1- Factory design pattern provides approach to code for interface rather than implementation.
2- Factory pattern removes the instantiation of actual implementation classes from client code.
Factory pattern makes our code more robust, less coupled and easy to extend.
For example, we can easily change PC class implementation because client program is unaware of this.
3- Factory pattern provides abstraction between implementation and client classes through inheritance.
4- Factory Method is that it can return the same instance multiple times, or can return a subclass
rather than an object of that exact type.

# Factory Design Pattern Examples in JDK

-> java.util.Calendar, ResourceBundle and NumberFormat getInstance() methods uses Factory pattern.
->  valueOf() method in wrapper classes like Boolean, Integer etc.